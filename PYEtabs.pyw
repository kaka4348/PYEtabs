# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PYEtabs.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(500, 550)
        MainWindow.setMinimumSize(QtCore.QSize(500, 550))
        MainWindow.setMaximumSize(QtCore.QSize(500, 550))
        MainWindow.setAcceptDrops(False)
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setToolTipDuration(-1)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setWindowFilePath("")
        MainWindow.setIconSize(QtCore.QSize(24, 24))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.conntab = QtWidgets.QTabWidget(self.centralwidget)
        self.conntab.setGeometry(QtCore.QRect(10, 0, 481, 511))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.conntab.setFont(font)
        self.conntab.setObjectName("conntab")
        self.tarahi = QtWidgets.QWidget()
        self.tarahi.setObjectName("tarahi")
        self.label_2 = QtWidgets.QLabel(self.tarahi)
        self.label_2.setGeometry(QtCore.QRect(180, 10, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_2.setObjectName("label_2")
        self.aj = QtWidgets.QCheckBox(self.tarahi)
        self.aj.setEnabled(True)
        self.aj.setGeometry(QtCore.QRect(383, 50, 81, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.aj.setFont(font)
        self.aj.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.aj.setCheckable(True)
        self.aj.setChecked(False)
        self.aj.setObjectName("aj")
        self.ajdyn = QtWidgets.QCheckBox(self.tarahi)
        self.ajdyn.setEnabled(False)
        self.ajdyn.setGeometry(QtCore.QRect(0, 50, 150, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ajdyn.setFont(font)
        self.ajdyn.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.ajdyn.setCheckable(True)
        self.ajdyn.setChecked(True)
        self.ajdyn.setObjectName("ajdyn")
        self.ajstat = QtWidgets.QCheckBox(self.tarahi)
        self.ajstat.setEnabled(False)
        self.ajstat.setGeometry(QtCore.QRect(163, 50, 111, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ajstat.setFont(font)
        self.ajstat.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.ajstat.setCheckable(True)
        self.ajstat.setChecked(True)
        self.ajstat.setObjectName("ajstat")
        self.pushButton_2 = QtWidgets.QPushButton(self.tarahi)
        self.pushButton_2.setEnabled(True)
        self.pushButton_2.setGeometry(QtCore.QRect(140, 340, 191, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.pushButton_2.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setAutoFillBackground(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_3 = QtWidgets.QLabel(self.tarahi)
        self.label_3.setGeometry(QtCore.QRect(20, 410, 421, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setObjectName("label_3")
        self.defult = QtWidgets.QCheckBox(self.tarahi)
        self.defult.setEnabled(False)
        self.defult.setGeometry(QtCore.QRect(303, 50, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.defult.setFont(font)
        self.defult.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.defult.setCheckable(True)
        self.defult.setChecked(False)
        self.defult.setObjectName("defult")
        self.conntab.addTab(self.tarahi, "")
        self.contorol = QtWidgets.QWidget()
        self.contorol.setObjectName("contorol")
        self.frame = QtWidgets.QFrame(self.contorol)
        self.frame.setGeometry(QtCore.QRect(10, 10, 461, 141))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.pushButton = QtWidgets.QPushButton(self.contorol)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(140, 340, 191, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.pushButton.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton.setFont(font)
        self.pushButton.setAutoFillBackground(True)
        self.pushButton.setObjectName("pushButton")
        self.formLayoutWidget_2 = QtWidgets.QWidget(self.contorol)
        self.formLayoutWidget_2.setGeometry(QtCore.QRect(20, 20, 171, 124))
        self.formLayoutWidget_2.setObjectName("formLayoutWidget_2")
        self.formLayout_3 = QtWidgets.QFormLayout(self.formLayoutWidget_2)
        self.formLayout_3.setContentsMargins(0, 0, 0, 0)
        self.formLayout_3.setHorizontalSpacing(3)
        self.formLayout_3.setVerticalSpacing(6)
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_5 = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.label_6 = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.label_7 = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.label_8 = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.ucdx = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ucdx.setFont(font)
        self.ucdx.setAlignment(QtCore.Qt.AlignCenter)
        self.ucdx.setObjectName("ucdx")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.ucdx)
        self.ucdy = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ucdy.setFont(font)
        self.ucdy.setAlignment(QtCore.Qt.AlignCenter)
        self.ucdy.setObjectName("ucdy")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.ucdy)
        self.uX = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.uX.setFont(font)
        self.uX.setText("")
        self.uX.setAlignment(QtCore.Qt.AlignCenter)
        self.uX.setObjectName("uX")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.uX)
        self.uY = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.uY.setFont(font)
        self.uY.setAlignment(QtCore.Qt.AlignCenter)
        self.uY.setObjectName("uY")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.uY)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.contorol)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(40, 150, 405, 32))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.etabs9 = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.etabs9.setMaximumSize(QtCore.QSize(100, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.etabs9.setFont(font)
        self.etabs9.setChecked(True)
        self.etabs9.setObjectName("etabs9")
        self.horizontalLayout.addWidget(self.etabs9)
        self.unit = QtWidgets.QComboBox(self.horizontalLayoutWidget)
        self.unit.setEnabled(False)
        self.unit.setMaximumSize(QtCore.QSize(100, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.unit.setFont(font)
        self.unit.setObjectName("unit")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.horizontalLayout.addWidget(self.unit)
        self.etabs18 = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.etabs18.setEnabled(True)
        self.etabs18.setMaximumSize(QtCore.QSize(100, 100))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.etabs18.setFont(font)
        self.etabs18.setObjectName("etabs18")
        self.horizontalLayout.addWidget(self.etabs18)
        self.formLayoutWidget = QtWidgets.QWidget(self.contorol)
        self.formLayoutWidget.setGeometry(QtCore.QRect(240, 20, 220, 121))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.upich = QtWidgets.QCheckBox(self.formLayoutWidget)
        self.upich.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.upich.setFont(font)
        self.upich.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.upich.setCheckable(True)
        self.upich.setChecked(False)
        self.upich.setObjectName("upich")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.upich)
        self.udrim = QtWidgets.QCheckBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.udrim.setFont(font)
        self.udrim.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.udrim.setObjectName("udrim")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.udrim)
        self.udris = QtWidgets.QCheckBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.udris.setFont(font)
        self.udris.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.udris.setObjectName("udris")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.udris)
        self.uvazh = QtWidgets.QCheckBox(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.uvazh.setFont(font)
        self.uvazh.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.uvazh.setObjectName("uvazh")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.uvazh)
        self.textBrowser = QtWidgets.QTextBrowser(self.contorol)
        self.textBrowser.setGeometry(QtCore.QRect(10, 190, 461, 121))
        self.textBrowser.setObjectName("textBrowser")
        self.label = QtWidgets.QLabel(self.contorol)
        self.label.setGeometry(QtCore.QRect(20, 410, 421, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setObjectName("label")
        self.conntab.addTab(self.contorol, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tabWidget = QtWidgets.QTabWidget(self.tab)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 481, 481))
        self.tabWidget.setMinimumSize(QtCore.QSize(100, 100))
        self.tabWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tabWidget.setFont(font)
        self.tabWidget.setToolTip("")
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.label_10 = QtWidgets.QLabel(self.tab_3)
        self.label_10.setGeometry(QtCore.QRect(40, 0, 381, 281))
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap("pic/loadasli.jpg"))
        self.label_10.setScaledContents(True)
        self.label_10.setObjectName("label_10")
        self.gridLayoutWidget = QtWidgets.QWidget(self.tab_3)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 290, 441, 101))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.beta = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.beta.setMaximumSize(QtCore.QSize(60, 16777215))
        self.beta.setProperty("value", 1.0)
        self.beta.setObjectName("beta")
        self.gridLayout.addWidget(self.beta, 1, 4, 1, 1)
        self.label_17 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_17.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.gridLayout.addWidget(self.label_17, 0, 5, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_34.setFont(font)
        self.label_34.setObjectName("label_34")
        self.gridLayout.addWidget(self.label_34, 1, 5, 1, 1)
        self.sigma = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.sigma.setMaximumSize(QtCore.QSize(60, 16777215))
        self.sigma.setProperty("value", 0.2)
        self.sigma.setObjectName("sigma")
        self.gridLayout.addWidget(self.sigma, 2, 4, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("GreekC")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.gridLayout.addWidget(self.label_20, 2, 3, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("GreekC")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.gridLayout.addWidget(self.label_19, 1, 3, 1, 1)
        self.alfa = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.alfa.setMaximumSize(QtCore.QSize(60, 16777215))
        self.alfa.setProperty("value", 1.2)
        self.alfa.setObjectName("alfa")
        self.gridLayout.addWidget(self.alfa, 0, 4, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.gridLayout.addWidget(self.label_13, 2, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 1, 0, 1, 1)
        self.sload = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.sload.setMaximumSize(QtCore.QSize(60, 16777215))
        self.sload.setDecimals(0)
        self.sload.setMaximum(10000000000000.0)
        self.sload.setProperty("value", 150.0)
        self.sload.setObjectName("sload")
        self.gridLayout.addWidget(self.sload, 2, 1, 1, 1)
        self.lload = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.lload.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lload.setDecimals(0)
        self.lload.setMaximum(10000000000000.0)
        self.lload.setProperty("value", 300.0)
        self.lload.setObjectName("lload")
        self.gridLayout.addWidget(self.lload, 1, 1, 1, 1)
        self.dload = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.dload.setMaximumSize(QtCore.QSize(60, 16777215))
        self.dload.setToolTipDuration(-1)
        self.dload.setDecimals(0)
        self.dload.setMaximum(10000000000000.0)
        self.dload.setProperty("value", 450.0)
        self.dload.setObjectName("dload")
        self.gridLayout.addWidget(self.dload, 0, 1, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_36.setMaximumSize(QtCore.QSize(15, 16777215))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_36.setFont(font)
        self.label_36.setObjectName("label_36")
        self.gridLayout.addWidget(self.label_36, 1, 7, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.gridLayout.addWidget(self.label_16, 2, 2, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.gridLayout.addWidget(self.label_15, 1, 2, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_11.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.gridLayout.addWidget(self.label_11, 0, 2, 1, 1)
        self.ln = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.ln.setMaximumSize(QtCore.QSize(60, 16777215))
        self.ln.setProperty("value", 6.0)
        self.ln.setObjectName("ln")
        self.gridLayout.addWidget(self.ln, 0, 6, 1, 1)
        self.lo = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.lo.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lo.setProperty("value", 6.0)
        self.lo.setObjectName("lo")
        self.gridLayout.addWidget(self.lo, 1, 6, 1, 1)
        self.label_18 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_18.setMaximumSize(QtCore.QSize(15, 16777215))
        font = QtGui.QFont()
        font.setFamily("GreekC")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.gridLayout.addWidget(self.label_18, 0, 3, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_33.setFont(font)
        self.label_33.setObjectName("label_33")
        self.gridLayout.addWidget(self.label_33, 0, 7, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_14.setMaximumSize(QtCore.QSize(15, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.gridLayout.addWidget(self.label_14, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.label_35 = QtWidgets.QLabel(self.tab_4)
        self.label_35.setGeometry(QtCore.QRect(200, -10, 241, 281))
        self.label_35.setText("")
        self.label_35.setPixmap(QtGui.QPixmap("pic/tir.jpg"))
        self.label_35.setScaledContents(True)
        self.label_35.setObjectName("label_35")
        self.formLayoutWidget_3 = QtWidgets.QWidget(self.tab_4)
        self.formLayoutWidget_3.setGeometry(QtCore.QRect(40, 60, 141, 213))
        self.formLayoutWidget_3.setObjectName("formLayoutWidget_3")
        self.formLayout_2 = QtWidgets.QFormLayout(self.formLayoutWidget_3)
        self.formLayout_2.setContentsMargins(0, 0, 0, 0)
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_37 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_37.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_37.setFont(font)
        self.label_37.setObjectName("label_37")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_37)
        self.bf = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.bf.setMaximumSize(QtCore.QSize(100, 16777215))
        self.bf.setDecimals(1)
        self.bf.setMaximum(100000000.0)
        self.bf.setProperty("value", 15.0)
        self.bf.setObjectName("bf")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.bf)
        self.tf = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.tf.setMaximumSize(QtCore.QSize(100, 16777215))
        self.tf.setDecimals(1)
        self.tf.setMaximum(100000000.0)
        self.tf.setProperty("value", 1.2)
        self.tf.setObjectName("tf")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.tf)
        self.label_39 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_39.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_39.setFont(font)
        self.label_39.setObjectName("label_39")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_39)
        self.tw = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.tw.setMaximumSize(QtCore.QSize(100, 16777215))
        self.tw.setDecimals(1)
        self.tw.setMaximum(100000000.0)
        self.tw.setProperty("value", 0.8)
        self.tw.setObjectName("tw")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.tw)
        self.label_40 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_40.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_40.setFont(font)
        self.label_40.setObjectName("label_40")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_40)
        self.dtotal = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.dtotal.setMaximumSize(QtCore.QSize(100, 16777215))
        self.dtotal.setDecimals(1)
        self.dtotal.setMaximum(100000000.0)
        self.dtotal.setProperty("value", 30.0)
        self.dtotal.setObjectName("dtotal")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.dtotal)
        self.label_38 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_38.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_38.setFont(font)
        self.label_38.setObjectName("label_38")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_38)
        self.zp = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.zp.setMaximumSize(QtCore.QSize(100, 16777215))
        self.zp.setDecimals(1)
        self.zp.setMaximum(100000000.0)
        self.zp.setProperty("value", 670.7)
        self.zp.setObjectName("zp")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.zp)
        self.label_49 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_49.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_49.setFont(font)
        self.label_49.setObjectName("label_49")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_49)
        self.label_57 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_57.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_57.setFont(font)
        self.label_57.setObjectName("label_57")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_57)
        self.gap = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.gap.setMaximumSize(QtCore.QSize(100, 16777215))
        self.gap.setDecimals(1)
        self.gap.setMaximum(100000000.0)
        self.gap.setProperty("value", 2.0)
        self.gap.setObjectName("gap")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.gap)
        self.h_angel = QtWidgets.QDoubleSpinBox(self.formLayoutWidget_3)
        self.h_angel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.h_angel.setDecimals(1)
        self.h_angel.setMaximum(100000000.0)
        self.h_angel.setProperty("value", 0.0)
        self.h_angel.setObjectName("h_angel")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.h_angel)
        self.label_23 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.label_23.setMaximumSize(QtCore.QSize(15, 16777215))
        font = QtGui.QFont()
        font.setFamily("GreekC")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_23)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.tab_4)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(180, 60, 32, 181))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_42 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_42.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_42.setFont(font)
        self.label_42.setObjectName("label_42")
        self.verticalLayout.addWidget(self.label_42)
        self.label_44 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_44.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_44.setFont(font)
        self.label_44.setObjectName("label_44")
        self.verticalLayout.addWidget(self.label_44)
        self.label_43 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_43.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_43.setFont(font)
        self.label_43.setObjectName("label_43")
        self.verticalLayout.addWidget(self.label_43)
        self.label_41 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_41.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_41.setFont(font)
        self.label_41.setObjectName("label_41")
        self.verticalLayout.addWidget(self.label_41)
        self.label_50 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_50.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_50.setFont(font)
        self.label_50.setObjectName("label_50")
        self.verticalLayout.addWidget(self.label_50)
        self.label_58 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_58.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_58.setFont(font)
        self.label_58.setObjectName("label_58")
        self.verticalLayout.addWidget(self.label_58)
        self.label_60 = QtWidgets.QLabel(self.tab_4)
        self.label_60.setGeometry(QtCore.QRect(180, 250, 51, 25))
        self.label_60.setMaximumSize(QtCore.QSize(200, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_60.setFont(font)
        self.label_60.setObjectName("label_60")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.tab_5)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(130, 110, 228, 238))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_22 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("GreekC")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.gridLayout_2.addWidget(self.label_22, 6, 0, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_45.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_45.setFont(font)
        self.label_45.setObjectName("label_45")
        self.gridLayout_2.addWidget(self.label_45, 0, 0, 1, 1)
        self.fu = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.fu.setMaximumSize(QtCore.QSize(100, 16777215))
        self.fu.setDecimals(0)
        self.fu.setMaximum(100000000.0)
        self.fu.setProperty("value", 3700.0)
        self.fu.setObjectName("fu")
        self.gridLayout_2.addWidget(self.fu, 1, 1, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_46.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_46.setFont(font)
        self.label_46.setObjectName("label_46")
        self.gridLayout_2.addWidget(self.label_46, 0, 2, 1, 1)
        self.label_52 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_52.setMaximumSize(QtCore.QSize(50, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_52.setFont(font)
        self.label_52.setObjectName("label_52")
        self.gridLayout_2.addWidget(self.label_52, 3, 0, 1, 1)
        self.label_47 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_47.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_47.setFont(font)
        self.label_47.setObjectName("label_47")
        self.gridLayout_2.addWidget(self.label_47, 1, 0, 1, 1)
        self.fy = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.fy.setMaximumSize(QtCore.QSize(100, 16777215))
        self.fy.setToolTip("")
        self.fy.setDecimals(0)
        self.fy.setMaximum(100000000.0)
        self.fy.setProperty("value", 2400.0)
        self.fy.setObjectName("fy")
        self.gridLayout_2.addWidget(self.fy, 0, 1, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_48.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_48.setFont(font)
        self.label_48.setObjectName("label_48")
        self.gridLayout_2.addWidget(self.label_48, 1, 2, 1, 1)
        self.fueg = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.fueg.setMaximumSize(QtCore.QSize(100, 16777215))
        self.fueg.setDecimals(0)
        self.fueg.setMaximum(100000000.0)
        self.fueg.setProperty("value", 4900.0)
        self.fueg.setObjectName("fueg")
        self.gridLayout_2.addWidget(self.fueg, 4, 1, 1, 1)
        self.label_53 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_53.setMaximumSize(QtCore.QSize(50, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_53.setFont(font)
        self.label_53.setObjectName("label_53")
        self.gridLayout_2.addWidget(self.label_53, 4, 0, 1, 1)
        self.fue = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.fue.setMaximumSize(QtCore.QSize(100, 16777215))
        self.fue.setDecimals(0)
        self.fue.setMaximum(100000000.0)
        self.fue.setProperty("value", 4200.0)
        self.fue.setObjectName("fue")
        self.gridLayout_2.addWidget(self.fue, 3, 1, 1, 1)
        self.label_54 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_54.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_54.setFont(font)
        self.label_54.setObjectName("label_54")
        self.gridLayout_2.addWidget(self.label_54, 3, 2, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_55.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_55.setFont(font)
        self.label_55.setObjectName("label_55")
        self.gridLayout_2.addWidget(self.label_55, 4, 2, 1, 1)
        self.betaw = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.betaw.setMaximumSize(QtCore.QSize(100, 16777215))
        self.betaw.setDecimals(2)
        self.betaw.setMaximum(100000000.0)
        self.betaw.setProperty("value", 0.75)
        self.betaw.setObjectName("betaw")
        self.gridLayout_2.addWidget(self.betaw, 6, 1, 1, 1)
        self.label_56 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_56.setMaximumSize(QtCore.QSize(50, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_56.setFont(font)
        self.label_56.setObjectName("label_56")
        self.gridLayout_2.addWidget(self.label_56, 7, 0, 1, 1)
        self.phikh = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.phikh.setMaximumSize(QtCore.QSize(100, 16777215))
        self.phikh.setDecimals(2)
        self.phikh.setMaximum(100000000.0)
        self.phikh.setProperty("value", 1.05)
        self.phikh.setObjectName("phikh")
        self.gridLayout_2.addWidget(self.phikh, 7, 1, 1, 1)
        self.label_51 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_51.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_51.setFont(font)
        self.label_51.setObjectName("label_51")
        self.gridLayout_2.addWidget(self.label_51, 2, 0, 1, 1)
        self.ry = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget_2)
        self.ry.setMaximumSize(QtCore.QSize(100, 16777215))
        self.ry.setDecimals(2)
        self.ry.setMaximum(100000000.0)
        self.ry.setProperty("value", 1.15)
        self.ry.setObjectName("ry")
        self.gridLayout_2.addWidget(self.ry, 2, 1, 1, 1)
        self.tabWidget.addTab(self.tab_5, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_9 = QtWidgets.QLabel(self.tab_2)
        self.label_9.setGeometry(QtCore.QRect(0, -70, 471, 351))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap("pic/1.jpg"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.tab_2)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(140, 290, 191, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.manual = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.manual.setEnabled(True)
        self.manual.setMaximumSize(QtCore.QSize(100, 100))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.manual.setFont(font)
        self.manual.setChecked(True)
        self.manual.setObjectName("manual")
        self.horizontalLayout_2.addWidget(self.manual)
        self.auto1 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.auto1.setEnabled(True)
        self.auto1.setMaximumSize(QtCore.QSize(110, 100))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.auto1.setFont(font)
        self.auto1.setObjectName("auto1")
        self.horizontalLayout_2.addWidget(self.auto1)
        self.design_connect_buttom = QtWidgets.QPushButton(self.tab_2)
        self.design_connect_buttom.setEnabled(True)
        self.design_connect_buttom.setGeometry(QtCore.QRect(140, 340, 191, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 238, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(129, 148, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 111, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 222, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.design_connect_buttom.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.design_connect_buttom.setFont(font)
        self.design_connect_buttom.setAutoFillBackground(True)
        self.design_connect_buttom.setObjectName("design_connect_buttom")
        self.t_plate = QtWidgets.QLineEdit(self.tab_2)
        self.t_plate.setGeometry(QtCore.QRect(40, 240, 401, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.t_plate.setFont(font)
        self.t_plate.setAlignment(QtCore.Qt.AlignCenter)
        self.t_plate.setObjectName("t_plate")
        self.label_21 = QtWidgets.QLabel(self.tab_2)
        self.label_21.setGeometry(QtCore.QRect(190, 210, 91, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.label_wfp_design = QtWidgets.QLabel(self.tab_2)
        self.label_wfp_design.setGeometry(QtCore.QRect(30, 410, 421, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_wfp_design.setFont(font)
        self.label_wfp_design.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_wfp_design.setObjectName("label_wfp_design")
        self.tabWidget.addTab(self.tab_2, "")
        self.conntab.addTab(self.tab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 21))
        self.menubar.setObjectName("menubar")
        self.about = QtWidgets.QMenu(self.menubar)
        self.about.setObjectName("about")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.about.addSeparator()
        self.menubar.addAction(self.about.menuAction())

        self.retranslateUi(MainWindow)
        self.conntab.setCurrentIndex(1)
        self.unit.setCurrentIndex(13)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PYEtabs"))
        MainWindow.setStatusTip(_translate("MainWindow", "PYEtabs v 99.3.2                                     telegram : @PYEtabs"))
        self.label_2.setText(_translate("MainWindow", "Etabs 2018+"))
        self.aj.setText(_translate("MainWindow", "Aj اصلاح "))
        self.ajdyn.setText(_translate("MainWindow", "بار دینامیکی طیفی"))
        self.ajstat.setText(_translate("MainWindow", "بار استاتیکی"))
        self.pushButton_2.setText(_translate("MainWindow", "شروع"))
        self.label_3.setText(_translate("MainWindow", "جهت اجرا مدل ایتبس 2018 را باز کرده و دکمه شروع را بزنید"))
        self.defult.setText(_translate("MainWindow", "0.05"))
        self.conntab.setTabText(self.conntab.indexOf(self.tarahi), _translate("MainWindow", "طراحی"))
        self.pushButton.setText(_translate("MainWindow", "شروع"))
        self.label_5.setText(_translate("MainWindow", "Cdx="))
        self.label_6.setText(_translate("MainWindow", "Cdy="))
        self.label_7.setText(_translate("MainWindow", "X="))
        self.label_8.setText(_translate("MainWindow", "Y="))
        self.etabs9.setText(_translate("MainWindow", "ETABS 9.7.4"))
        self.unit.setItemText(0, _translate("MainWindow", "lb_in_F"))
        self.unit.setItemText(1, _translate("MainWindow", "lb_ft_F"))
        self.unit.setItemText(2, _translate("MainWindow", "kip_in_F"))
        self.unit.setItemText(3, _translate("MainWindow", "kip_ft_F"))
        self.unit.setItemText(4, _translate("MainWindow", "kN_mm_C"))
        self.unit.setItemText(5, _translate("MainWindow", "kN_m_C"))
        self.unit.setItemText(6, _translate("MainWindow", "kgf_mm_C"))
        self.unit.setItemText(7, _translate("MainWindow", "kgf_m_C"))
        self.unit.setItemText(8, _translate("MainWindow", "N_mm_C"))
        self.unit.setItemText(9, _translate("MainWindow", "N_m_C"))
        self.unit.setItemText(10, _translate("MainWindow", "Ton_mm_C"))
        self.unit.setItemText(11, _translate("MainWindow", "Ton_m_C"))
        self.unit.setItemText(12, _translate("MainWindow", "kN_cm_C"))
        self.unit.setItemText(13, _translate("MainWindow", "kgf_cm_C"))
        self.unit.setItemText(14, _translate("MainWindow", "N_cm_C"))
        self.unit.setItemText(15, _translate("MainWindow", "Ton_cm_C"))
        self.etabs18.setText(_translate("MainWindow", "ETABS 2018+"))
        self.upich.setText(_translate("MainWindow", "کنترل نامنظمی پیچشی"))
        self.udrim.setText(_translate("MainWindow", "کنترل دریفت مرکز جرم"))
        self.udris.setText(_translate("MainWindow", "کنترل حداکثر دریفت طبقه"))
        self.uvazh.setText(_translate("MainWindow", "کنترل واژگونی"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:15pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8.25pt;\">Cdx= ضریب بزرگنمایی تغییرمکان در راستای ایکس</span></p>\n"
"<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p>\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8.25pt;\">Cdy= ضریب بزرگنمایی تغییرمکان در راستای وای</span></p>\n"
"<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p>\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8.25pt;\">X= طول سازه (فونداسیون) در راستای ایکس مطابق با واحد فایل خروجی ایتبس</span></p>\n"
"<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p>\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8.25pt;\">Y= طول سازه (فونداسیون) در راستای وای مطابق با واحد فایل خروجی ایتبس</span></p>\n"
"<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p>\n"
"<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.label.setText(_translate("MainWindow", "جهت اجرا فایلهای متنی ایتبس را در کنار برنامه قرار داده و دکمه شروع را بزنید"))
        self.conntab.setTabText(self.conntab.indexOf(self.contorol), _translate("MainWindow", "کنترل"))
        self.beta.setToolTip(_translate("MainWindow", "ضریب بار زنده"))
        self.label_17.setText(_translate("MainWindow", "Ln"))
        self.label_34.setText(_translate("MainWindow", "Lo"))
        self.sigma.setToolTip(_translate("MainWindow", "ضریب بار برف"))
        self.label_20.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">d</span></p></body></html>"))
        self.label_19.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">b</span></p></body></html>"))
        self.alfa.setToolTip(_translate("MainWindow", "ضریب بار مرده"))
        self.label_13.setText(_translate("MainWindow", "S"))
        self.label_12.setText(_translate("MainWindow", "L"))
        self.sload.setToolTip(_translate("MainWindow", "بار برف"))
        self.lload.setToolTip(_translate("MainWindow", "مجموع بار زنده"))
        self.dload.setToolTip(_translate("MainWindow", "مجموع بار مرده"))
        self.label_36.setText(_translate("MainWindow", "m"))
        self.label_16.setText(_translate("MainWindow", "kg/m2"))
        self.label_15.setText(_translate("MainWindow", "kg/m2"))
        self.label_11.setText(_translate("MainWindow", "kg/m2"))
        self.ln.setToolTip(_translate("MainWindow", "دهانه خالص تیر ( بر ستون تا بر ستون )"))
        self.lo.setToolTip(_translate("MainWindow", "دهانه بارگیر تیر"))
        self.label_18.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">a</span></p></body></html>"))
        self.label_33.setText(_translate("MainWindow", "m"))
        self.label_14.setText(_translate("MainWindow", "D"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "بارگزاری"))
        self.label_37.setText(_translate("MainWindow", "bf"))
        self.label_39.setText(_translate("MainWindow", "tw"))
        self.label_40.setText(_translate("MainWindow", "d"))
        self.label_38.setText(_translate("MainWindow", "tf"))
        self.zp.setToolTip(_translate("MainWindow", "اساس مقطع پلاستیک محور قوی Zx"))
        self.label_49.setText(_translate("MainWindow", "Z"))
        self.label_57.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">gap</span></p></body></html>"))
        self.gap.setToolTip(_translate("MainWindow", "بادخور بین تیر و ستون"))
        self.h_angel.setToolTip(_translate("MainWindow", "زاویه افقی تیر در پلان xy  نسبت به محور x"))
        self.label_23.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#000000;\">a</span></p></body></html>"))
        self.label_42.setText(_translate("MainWindow", "cm"))
        self.label_44.setText(_translate("MainWindow", "cm"))
        self.label_43.setText(_translate("MainWindow", "cm"))
        self.label_41.setText(_translate("MainWindow", "cm"))
        self.label_50.setText(_translate("MainWindow", "cm3"))
        self.label_58.setText(_translate("MainWindow", "cm"))
        self.label_60.setText(_translate("MainWindow", "deg"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "مقطع تیر"))
        self.label_22.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">b</span></p></body></html>"))
        self.label_45.setText(_translate("MainWindow", "Fy"))
        self.label_46.setText(_translate("MainWindow", "kg/cm2"))
        self.label_52.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">Fue</span></p></body></html>"))
        self.label_47.setText(_translate("MainWindow", "Fu"))
        self.label_48.setText(_translate("MainWindow", "kg/cm2"))
        self.fueg.setToolTip(_translate("MainWindow", "تنش کششی فلز الکترود برای جوش شیاری"))
        self.label_53.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">FueG</span></p></body></html>"))
        self.fue.setToolTip(_translate("MainWindow", "تنش کششی فلز الکترود برای جوش گوشه"))
        self.label_54.setText(_translate("MainWindow", "kg/cm2"))
        self.label_55.setText(_translate("MainWindow", "kg/cm2"))
        self.betaw.setToolTip(_translate("MainWindow", "جوش در محل بازرسی چشمی 0.75 ، جوش در کارخانه بازرسی چشمی 0.85 ، انجام آزمایش غیر مخرب نظیر رادیوگرافی و اولتراسونیک 1"))
        self.label_56.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#0000ff;\">Ratio</span></p></body></html>"))
        self.phikh.setToolTip(_translate("MainWindow", "خطای مجاز جهت طراحی"))
        self.label_51.setText(_translate("MainWindow", "Ry"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "پارامتر طراحی"))
        self.manual.setText(_translate("MainWindow", "Manual"))
        self.auto1.setText(_translate("MainWindow", "Auto Etabs +18"))
        self.design_connect_buttom.setText(_translate("MainWindow", "شروع"))
        self.t_plate.setToolTip(_translate("MainWindow", "ضخامت ورق های موجود برای طراحی"))
        self.t_plate.setText(_translate("MainWindow", "0.8 , 1 , 1.2 , 1.5 , 2 , 2.5 , 3 , 3.5 , 4"))
        self.label_21.setText(_translate("MainWindow", "t _plate  cm"))
        self.label_wfp_design.setText(_translate("MainWindow", "جهت اجرا دکمه شروع را بزنید"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "WFP"))
        self.conntab.setTabText(self.conntab.indexOf(self.tab), _translate("MainWindow", "اتصالات"))
        self.about.setTitle(_translate("MainWindow", "درباره"))


if __name__ == "__main__":
    x = 0
    y = 0
    cdxx = 0
    cdyy = 0

    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    ui.etabs18.clicked.connect(lambda: unitfunc())


    def unitfunc():
        ui.unit.setEnabled(True)
        ui.label.setText('لطفا مدل ایتبس 2018 خود را باز کرده و مطابق با فایل help دکمه شروع را بزنید')


    ui.etabs9.clicked.connect(lambda: unitfunc2())


    def unitfunc2():
        ui.unit.setEnabled(False)
        ui.label.setText('جهت اجرا فایلهای متنی ایتبس را در کنار برنامه قرار داده و دکمه شروع را بزنید')


    ui.pushButton.clicked.connect(lambda: func())
    ui.pushButton_2.clicked.connect(lambda: dfunc())


    def func():
        if ui.etabs9.isChecked():
            func9()
        if ui.etabs18.isChecked():
            func18()


    ui.aj.clicked.connect(lambda: dcheck())


    def dcheck():
        if ui.aj.isChecked():
            ui.ajdyn.setEnabled(True)
            ui.ajstat.setEnabled(True)
            ui.defult.setEnabled(True)
        else:
            ui.ajdyn.setEnabled(False)
            ui.ajstat.setEnabled(False)
            ui.defult.setEnabled(False)


    def dfunc():
        if ui.aj.isChecked():
            from e2018.aj import aj
            static = ui.ajstat.isChecked()
            dynamic = ui.ajdyn.isChecked()
            if static == dynamic == False:
                ui.label_3.setText('لطفا یکی از بارهای دینامیکی یا استاتیکی Aj را انتخاب کنید')
            else:
                try:
                    defult = ui.defult.isChecked()
                    aj(static, dynamic, defult)
                    ui.label_3.setText('عملیات با موفقیت به اتمام رسید')
                except:
                    ui.label_3.setText('مدل ایتبس 2018 یافت نشد')
        else:
            ui.label_3.setText('لطفا یکی از حالت های کمک طراحی را انتخاب کنید')


    def func18():
        global datapich
        global datacmdrift
        global datastorydrift
        global datavazhgooni
        global unitline
        try:

            import comtypes.client
            myETABSObject = comtypes.client.GetActiveObject("CSI.ETABS.API.ETABSObject")
            SapModel = myETABSObject.SapModel
            unitt = {
                1: 'lb_in_F',
                2: 'lb_ft_F',
                3: 'kip_in_F',
                4: 'kip_ft_F',
                5: 'kN_mm_C',
                6: 'kN_m_C',
                7: 'kgf_mm_C',
                8: 'kgf_m_C',
                9: 'N_mm_C',
                10: 'N_m_C',
                11: 'Ton_mm_C',
                12: 'Ton_m_C',
                13: 'kN_cm_C',
                14: 'kgf_cm_C',
                15: 'N_cm_C',
                16: 'Ton_cm_C'
            }

            setunit = ui.unit.currentIndex() + 1
            ret = SapModel.SetPresentUnits(setunit)
            name = SapModel.GetModelFilename(False)
            version = SapModel.GetVersion()
            unit = unitt[setunit]
            unitline = 'ETABS' + '  ' + version[0] + '    ' + name[:-4] + '    ' + unit
            x = float(ui.uX.text())
            y = float(ui.uY.text())
            cdx = float(ui.ucdx.text())
            cdy = float(ui.ucdy.text())
            if ui.upich.isChecked():
                from e2018.pich import pich
                datapich = pich()
            if ui.udrim.isChecked():
                from e2018.cmdrift import cmdrift
                datacmdrift = cmdrift(cdx, cdy)
            if ui.udris.isChecked():
                from e2018.maxdrift import maxdrift
                datastorydrift = maxdrift(cdx, cdy)
            if ui.uvazh.isChecked():
                from e2018.vazhgooni import vazhgooni
                datavazhgooni = vazhgooni(x, y)
            ui.label.setText("فایل متنی کنترل با موفقیت ساخته شد")
            if ui.upich.isChecked() == ui.udrim.isChecked() == ui.uvazh.isChecked() == ui.udris.isChecked() == False:
                ui.label.setText("لطفا حداقل یکی از حالت های کنترل را انتخاب کنید")
            export18()
        except ValueError:
            ui.label.setText("لطفا موارد خواسته شده را با عدد پر کنید")
        except:
            ui.label.setText("مدل باز شده ایتبس 2018 یافت نشد")


    def func9():
        global x
        global y
        global cdyy
        global cdxx
        global unitline
        try:
            a = open('test.txt')
            a.readline()
            aa = a.readline()
            unitline1 = aa.split()
            unitline = unitline1[0] + '  ' + unitline1[1] + '  ' + unitline1[2] + '  ' + unitline1[3]
            a.close()
        except:
            pass
        try:
            x = float(ui.uX.text())
            y = float(ui.uY.text())
            cdxx = float(ui.ucdx.text())
            cdyy = float(ui.ucdy.text())
            if ui.upich.isChecked():
                pich()
            if ui.udrim.isChecked():
                cmdrift()
            if ui.udris.isChecked():
                storydrift()
            if ui.uvazh.isChecked():
                vazhgooni()
            ui.label.setText("فایل متنی کنترل با موفقیت ساخته شد")
            if ui.upich.isChecked() == ui.udrim.isChecked() == ui.uvazh.isChecked() == ui.udris.isChecked() == False:
                ui.label.setText("لطفا حداقل یکی از حالت های کنترل را انتخاب کنید")
            export9()
        except ValueError:
            ui.label.setText("لطفا موارد خواسته شده را با عدد پر کنید")
        except:
            ui.label.setText("فایل متنی ایتبس یافت نشد")


    ############################################pich
    def pich():
        a = open('test.txt')
        global datapich
        datapich = []
        a.readline()
        a.readline()
        i = ''
        while i != ' D I A P H R A G M   M A S S   D A T A \n':
            i = a.readline()
        for i in range(0, 4):
            i = a.readline()
        hs = []
        while i != ' \n':
            er = i.split()
            while er[1] != 'D1':
                i = a.readline()
                er = i.split()
            hs.append(i)
            i = a.readline()
        n = len(hs)
        while i != ' STORY MAXIMUM AND AVERAGE LATERAL DISPLACEMENTS\n':
            i = a.readline()
        for i in range(0, 4):
            i = a.readline()
        while i != '':
            for id in range(1, n):
                hd = i.split()
                stay = a.tell()
                bb = a.readline()
                if bb == '': break
                hb = bb.split()
                a.seek(stay)
                max = (float(hd[3]) - float(hb[3]))
                ave = (float(hd[4]) - float(hb[4]))
                ratio = max / ave
                t = ''
                if ratio <= 1.2:
                    t = 'منظم پيچشی'
                elif 1.2 < ratio < 1.4:
                    t = 'نامنظمی پيچشی'
                else:
                    t = 'نامنظمی شديد پيچشی'
                Aj = (ratio / 1.2) ** 2
                if Aj <= 1:
                    Aj = 1
                elif Aj >= 3:
                    Aj = 3
                Ajst = '%.2f' % (Aj)
                maxst = '%.4f' % (max)
                avest = '%.4f' % (ave)
                ratiost = '%.3f' % (ratio)
                datapich.append([hd[0], hd[1], hd[2], maxst, avest, ratiost, Ajst, t])
                i = a.readline()
            hd = i.split()
            max = float(hd[3])
            ave = float(hd[4])
            ratio = max / ave
            t = ''
            if ratio <= 1.2:
                t = 'منظم پيچشی'
            elif 1.2 < ratio < 1.4:
                t = 'نامنظمی پيچشی'
            else:
                t = 'نامنظمی شديد پيچشی'
            Aj = (ratio / 1.2) ** 2
            if Aj <= 1:
                Aj = 1
            elif Aj >= 3:
                Aj = 3
            Ajst = '%.2f' % (Aj)
            maxst = '%.4f' % (max)
            avest = '%.4f' % (ave)
            ratiost = '%.3f' % (ratio)
            datapich.append([hd[0], hd[1], hd[2], maxst, avest, ratiost, Ajst, t])
            i = a.readline()
        a.close()


    ###########################################cmdrift
    def cmdrift():
        global datacmdrift
        global cdxx
        global cdyy
        datacmdrift = []
        aa = open('test.txt', 'r')
        i = ''
        while i != ' D I A P H R A G M   M A S S   D A T A \n':
            i = aa.readline()
        for i in range(0, 4):
            i = aa.readline()
        hs = []
        while i != ' \n':
            er = i.split()
            while er[1] != 'D1':
                i = aa.readline()
                er = i.split()
            hs.append(i)
            i = aa.readline()
        n = len(hs)
        cdx = float(cdxx)
        cdy = float(cdyy)
        if int(n) <= 5:
            nn = 0.025
        else:
            nn = 0.02
        aa.seek(0)
        while i != ' S T O R Y   D A T A \n':
            i = aa.readline()
        for i in range(0, 4):
            i = aa.readline()
        hss = []
        while i[0:5] != ' BASE':
            hss.append(i)
            i = aa.readline()
        while i != ' DISPLACEMENTS AT DIAPHRAGM CENTER OF MASS\n':
            i = aa.readline()
        i = aa.readline()
        i = aa.readline()
        i = aa.readline()
        i = aa.readline()
        while i != ' \n':
            for id in range(1, n):
                hd = i.split()
                while hd[1] != 'D1':
                    i = aa.readline()
                    if i == ' \n': break
                    hd = i.split()
                for ii in hss:
                    iii = ii.split()
                    if hd[0] == iii[0]:
                        h = float(iii[2])
                        break
                stay = aa.tell()
                bbb = aa.readline()
                if bbb == ' \n': break
                hb = bbb.split()
                while hb[1] != 'D1':
                    bbb = aa.readline()
                    if bbb == ' \n': break
                    hb = bbb.split()
                aa.seek(stay)
                uxd = float(hd[3])
                uyd = float(hd[4])
                uxb = float(hb[3])
                uyb = float(hb[4])
                ux = uxd - uxb
                uy = uyd - uyb
                if ux > uy:
                    u = ux
                    cd = cdx
                else:
                    u = uy
                    cd = cdy
                dria = nn / cd
                drim = u / h
                ddria = '%.6f' % (dria)
                ddrim = '%.6f' % (drim)
                if dria >= drim:
                    res = 'ok'
                else:
                    res = 'not ok'
                uxt = '%.6f' % (ux)
                uyt = '%.6f' % (uy)
                ht = str(h)
                datacmdrift.append([hd[0], hd[1], hd[2], uxt, uyt, ht, ddrim, ddria, res])
                i = aa.readline()
            hd = i.split()
            while hd[1] != 'D1':
                i = aa.readline()
                hd = i.split()
            for ii in hss:
                iii = ii.split()
                if hd[0] == iii[0]:
                    h = float(iii[2])
            ux = float(hd[3])
            uy = float(hd[4])
            if ux > uy:
                u = ux
                cd = cdx
            else:
                u = uy
                cd = cdy
            dria = nn / cd
            drim = u / h
            ddria = '%.6f' % (dria)
            ddrim = '%.6f' % (drim)
            if dria >= drim:
                res = 'ok'
            else:
                res = 'not ok'
            uxt = str(ux)
            uyt = str(uy)
            ht = str(h)
            datacmdrift.append([hd[0], hd[1], hd[2], uxt, uyt, ht, ddrim, ddria, res])
            i = aa.readline()
        aa.close()


    ################################storydrift
    def storydrift():
        global datastorydrift
        global cdxx
        global cdyy
        datastorydrift = []
        aa = open('test1.txt', 'r')
        aaa = open('test.txt', 'r')
        i = ''
        while i != ' D I A P H R A G M   M A S S   D A T A \n':
            i = aaa.readline()
        for i in range(0, 4):
            i = aaa.readline()
        hs = []
        while i != ' \n':
            er = i.split()
            while er[1] != 'D1':
                i = aaa.readline()
                er = i.split()
            hs.append(i)
            i = aaa.readline()
        n = len(hs)
        cdx = float(cdxx)
        cdy = float(cdyy)
        if int(n) <= 5:
            nn = 0.025
        else:
            nn = 0.02
        i = ''
        while i != ' S T O R Y   D R I F T S\n':
            i = aa.readline()
        for i in range(0, 4):
            i = aa.readline()
        ind = aa.tell()
        bi = aa.readline()
        aa.seek(ind)
        while i + bi != ' \n \n':
            if i != ' \n':
                hs = i.split()
                if hs[1] == 'X':
                    mot = nn / cdx
                elif hs[1] == 'Y':
                    mot = nn / cdy
                if float(hs[7]) <= mot:
                    ok = 'ok'
                else:
                    ok = 'not ok'
                datastorydrift.append([hs[0], hs[1], hs[2], hs[3], hs[4], hs[5], hs[6], hs[7], '%.6f' % (mot), ok])
            i = aa.readline()
            ind = aa.tell()
            bi = aa.readline()
            aa.seek(ind)
        aa.close()
        aaa.close()


    #######################################vazhgooni

    def vazhgooni():
        global datavazhgooni
        global x
        global y
        datavazhgooni = []
        aa = open('test.txt', 'r')
        i = ''
        while i != ' AUTO SEISMIC CALCULATION RESULTS\n':
            i = aa.readline()
        i = aa.readline()
        i = aa.readline()
        wstr = i.split()
        w = float(wstr[3])
        while i != ' D I A P H R A G M   M A S S   D A T A \n':
            i = aa.readline()
        for i in range(1, 5):
            i = aa.readline()
        hs = []
        xmc = 0
        ymc = 0
        mcx = 0
        mcy = 0
        while i != ' \n':
            hss = i.split()
            while hss[1] != 'D1':
                i = aa.readline()
                hss = i.split()
            hs.append(i)
            xmc += float(hss[2]) * float(hss[5])
            ymc += float(hss[3]) * float(hss[6])
            mcx += float(hss[2])
            mcy += float(hss[3])
            i = aa.readline()
        n = len(hs)
        xm = xmc / mcx
        ym = ymc / mcy
        if x - xm < xm: xm = x - xm
        if y - ym < ym: ym = y - ym
        while i != ' TOTAL REACTIVE FORCES (RECOVERED LOADS) AT ORIGIN\n':
            i = aa.readline()
        for i in range(1, 5):
            i = aa.readline()
        while i != ' \n':
            hss = i.split()
            if hss[0] == 'EX':
                my = abs(float(hss[5]))
            elif hss[0] == 'EY':
                mx = abs(float(hss[4]))
            i = aa.readline()
        fsx = xm * w / my
        if fsx >= 1:
            okx = 'ok'
        else:
            okx = 'not ok'
        fsy = ym * w / mx
        if fsy >= 1:
            oky = 'ok'
        else:
            oky = 'not ok'
        datavazhgooni.append([str(w), '%.3f' % (xm), str(my), '%.2f' % (fsx), okx])
        datavazhgooni.append([str(w), '%.3f' % (ym), str(mx), '%.2f' % (fsy), oky])
        aa.close()


    def export9():
        global datapich
        global datacmdrift
        global datastorydrift
        global datavazhgooni
        global unitline
        from docx import Document
        from docx.shared import Cm

        document = Document()

        # difine custom style

        from docx.enum.style import WD_STYLE_TYPE
        from docx.shared import Pt
        styles = document.styles
        style = styles.add_style('persian', WD_STYLE_TYPE.PARAGRAPH)
        style.base_style = styles['Normal']
        # style.font.rtl=True
        style.font.bold = True
        # style.font.name='Arial'
        style.font.size = Pt(12)
        # from docx.enum.text import WD_ALIGN_PARAGRAPH
        # style.paragraph_format.alignment = WD_ALIGN_PARAGRAPH.RIGHT

        # =

        styles = document.styles
        style = styles.add_style('sartitr', WD_STYLE_TYPE.PARAGRAPH)
        style.base_style = styles['Normal']
        style.font.bold = True
        # style.font.name='Arial'
        style.font.size = Pt(22)
        from docx.enum.text import WD_ALIGN_PARAGRAPH
        style.paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER

        # =

        document.add_paragraph('PYEtabs', style='sartitr')

        # ejad fasele ba parageraph khali
        document.add_paragraph()
        document.add_paragraph('تهيه کننده علی فرج پورزنجانی عضويت 3556 نظام مهندسی کرمانشاه', style='persian')
        document.add_paragraph('شماره تماس   09187406759  ', style='persian')
        document.add_paragraph('آيدی تلگرام   @aliok63  ', style='persian')
        document.add_paragraph('کانال تلگرام برنامه جهت دريافت جديدترين نسخه   @PYEtabs  ', style='persian')
        document.add_paragraph()
        document.add_paragraph(unitline, style='persian')
        document.add_paragraph()
        document.add_paragraph()
        document.add_paragraph()
        # =
        # =============================== export pich

        if ui.upich.isChecked():
            text = 'کنترل نامنظمی پیچشی:'
            document.add_paragraph(text, style='persian')

            document.add_paragraph()

            # table
            table = document.add_table(rows=1, cols=8, style='connection')

            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER

            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL

            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER

            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'LOAD'
            hdr_cells[2].text = 'DIR'
            hdr_cells[3].text = 'MAXIMUM'
            hdr_cells[4].text = 'AVERAGE'
            hdr_cells[5].text = 'RATIO'
            hdr_cells[6].text = 'Aj'
            hdr_cells[7].text = 'کنترل نامنظمی'
            len1 = len(datapich)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(8):
                    row_cells[j].text = datapich[i][j]
            # =

            document.add_page_break()
            document.save('control.docx')

        # ========================================= export cmdrift
        if ui.udrim.isChecked():
            text = 'کنترل دریفت مرکز جرم:'
            document.add_paragraph(text, style='persian')

            document.add_paragraph()

            # table
            table = document.add_table(rows=1, cols=9, style='connection')

            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER

            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL

            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER

            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'DIAPHRAGM'
            hdr_cells[2].text = 'LOAD'
            hdr_cells[3].text = 'UX'
            hdr_cells[4].text = 'UY'
            hdr_cells[5].text = 'HIGH STORY'
            hdr_cells[6].text = 'MAX.DRIFT'
            hdr_cells[7].text = 'ALL.DRIFT'
            hdr_cells[8].text = 'OK OR NOT'
            len1 = len(datacmdrift)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(9):
                    row_cells[j].text = datacmdrift[i][j]
            # =

            document.add_page_break()
            document.save('control.docx')

        # ==================================== export story drift

        if ui.udris.isChecked():
            datastorydrift = sorted(datastorydrift, key=lambda load: load[2])
            text = 'کنترل دریفت حداکثر طبقه:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=1, cols=10, style='connection')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'DIRECTION'
            hdr_cells[2].text = 'LOAD'
            hdr_cells[3].text = 'POINT'
            hdr_cells[4].text = 'X'
            hdr_cells[5].text = 'Y'
            hdr_cells[6].text = 'Z'
            hdr_cells[7].text = 'MAX DRIFT'
            hdr_cells[8].text = 'ALL.DRIFT'
            hdr_cells[9].text = 'OK OR NOT'
            len1 = len(datastorydrift)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(10):
                    row_cells[j].text = datastorydrift[i][j]
            document.add_page_break()
            document.save('control.docx')

        # ======================================= export vazhgooni

        if ui.uvazh.isChecked():
            text = 'کنترل واژگونی:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=4, cols=5, style='vazhgooni')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'W'
            hdr_cells[1].text = 'XCM'
            hdr_cells[2].text = 'MY(active)'
            hdr_cells[3].text = 'F.S'
            hdr_cells[4].text = 'ok or not'
            row_cells = table.rows[1].cells
            for j in range(5):
                row_cells[j].text = datavazhgooni[0][j]
            hdr_cells = table.rows[2].cells
            hdr_cells[0].text = 'W'
            hdr_cells[1].text = 'YCM'
            hdr_cells[2].text = 'MX(active)'
            hdr_cells[3].text = 'F.S'
            hdr_cells[4].text = 'ok or not'
            row_cells = table.rows[3].cells
            for j in range(5):
                row_cells[j].text = datavazhgooni[1][j]

            document.add_page_break()
            document.save('control.docx')


    # ========================================================== export18

    def export18():
        global datapich
        global datacmdrift
        global datastorydrift
        global datavazhgooni
        global unitline
        from docx import Document
        from docx.shared import Cm
        document = Document()
        # difine custom style
        from docx.enum.style import WD_STYLE_TYPE
        from docx.shared import Pt
        styles = document.styles
        style = styles.add_style('persian', WD_STYLE_TYPE.PARAGRAPH)
        style.base_style = styles['Normal']
        # style.font.rtl=True
        style.font.bold = True
        # style.font.name='Arial'
        style.font.size = Pt(12)
        # from docx.enum.text import WD_ALIGN_PARAGRAPH
        # style.paragraph_format.alignment = WD_ALIGN_PARAGRAPH.RIGHT
        # =
        styles = document.styles
        style = styles.add_style('sartitr', WD_STYLE_TYPE.PARAGRAPH)
        style.base_style = styles['Normal']
        style.font.bold = True
        # style.font.name='Arial'
        style.font.size = Pt(22)
        from docx.enum.text import WD_ALIGN_PARAGRAPH
        style.paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER
        # =
        document.add_paragraph('PYEtabs', style='sartitr')
        # ejad fasele ba parageraph khali
        document.add_paragraph()
        document.add_paragraph('تهيه کننده علی فرج پورزنجانی عضويت 3556 نظام مهندسی کرمانشاه', style='persian')
        document.add_paragraph('شماره تماس   09187406759  ', style='persian')
        document.add_paragraph('آيدی تلگرام   @aliok63  ', style='persian')
        document.add_paragraph('کانال تلگرام برنامه جهت دريافت جديدترين نسخه   @PYEtabs  ', style='persian')
        document.add_paragraph()
        document.add_paragraph(unitline, style='persian')
        document.add_paragraph()
        document.add_paragraph()
        document.add_paragraph()
        # =
        # =============================== export pich
        if ui.upich.isChecked():
            text = 'کنترل نامنظمی پیچشی:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=1, cols=8, style='connection')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'LOAD'
            hdr_cells[2].text = 'DIR'
            hdr_cells[3].text = 'MAXIMUM'
            hdr_cells[4].text = 'AVERAGE'
            hdr_cells[5].text = 'RATIO'
            hdr_cells[6].text = 'Aj'
            hdr_cells[7].text = 'کنترل نامنظمی'
            len1 = len(datapich)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(8):
                    row_cells[j].text = datapich[i][j]
            document.add_page_break()
            document.save('control.docx')
        # ========================================= export cmdrift
        if ui.udrim.isChecked():
            text = 'کنترل دریفت مرکز جرم:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=1, cols=6, style='connection')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'LOAD'
            hdr_cells[2].text = 'DIR'
            hdr_cells[3].text = 'DRIFT'
            hdr_cells[4].text = 'ALL.DRIFT'
            hdr_cells[5].text = 'OK OR NOT'
            len1 = len(datacmdrift)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(6):
                    row_cells[j].text = datacmdrift[i][j]
            document.add_page_break()
            document.save('control.docx')
        # ==================================== export story drift
        if ui.udris.isChecked():
            # datastorydrift = sorted(datastorydrift, key=lambda load: load[2])
            text = 'کنترل دریفت حداکثر طبقه:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=1, cols=6, style='connection')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            hdr_cells = table.rows[0].cells
            hdr_cells[0].text = 'STORY'
            hdr_cells[1].text = 'LOAD'
            hdr_cells[2].text = 'DIR'
            hdr_cells[3].text = 'DRIFT'
            hdr_cells[4].text = 'ALL.DRIFT'
            hdr_cells[5].text = 'OK OR NOT'
            len1 = len(datastorydrift)
            for i in range(int(len1)):
                row_cells = table.add_row().cells
                for j in range(6):
                    row_cells[j].text = datastorydrift[i][j]
            document.add_page_break()
            document.save('control.docx')
        # ======================================= export vazhgooni
        if ui.uvazh.isChecked():
            text = 'کنترل واژگونی:'
            document.add_paragraph(text, style='persian')
            document.add_paragraph()
            # table
            table = document.add_table(rows=4, cols=5, style='vazhgooni')
            from docx.enum.table import WD_TABLE_ALIGNMENT
            table.alignment = WD_TABLE_ALIGNMENT.CENTER
            # from docx.enum.table import WD_TABLE_DIRECTION
            # table.direction = WD_TABLE_DIRECTION.RTL
            # from docx.enum.table import WD_ALIGN_VERTICAL
            # table.cell(0,0).vertical_alignment = WD_ALIGN_VERTICAL.CENTER
            for i in range(4):
                cells = table.rows[i].cells
                for j in range(5):
                    cells[j].text = datavazhgooni[i][j]
            document.add_page_break()
            document.save('control.docx')


    # =============================================================connection

    # ========================wfp

    ui.design_connect_buttom.clicked.connect(lambda: wfp_connection_design())


    def wfp_connection_design():
        if ui.manual.isChecked():
            wfp_manual()
            ui.label_wfp_design.setText('عملیات با موفقیت به اتمام رسید')
        if ui.auto1.isChecked():
            try:
                wfp_auto()
                ui.label_wfp_design.setText('عملیات با موفقیت به اتمام رسید')
            except:
                ui.label_wfp_design.setText('مدل باز شده ایتبس یافت نشد')


    def wfp_manual():

        try:
            tplate = ui.t_plate.text()
            tplate = list(map(lambda x: float(x), tplate.split(',')))
            tplate = list(set(tplate))
        except:
            pass

        Fy = ui.fy.value()
        Fu = ui.fu.value()
        Ry = ui.ry.value()
        Fue = ui.fue.value()
        FueG = ui.fueg.value()
        B = ui.betaw.value()
        phikh = ui.phikh.value()
        gap = ui.gap.value()
        Z = ui.zp.value()
        d = ui.dtotal.value()
        bf = ui.bf.value()
        tf = ui.tf.value()
        tw = ui.tw.value()
        Ln = ui.ln.value() * 100
        Lo = ui.lo.value() * 100
        dload = ui.dload.value() / 10000
        alfa = ui.alfa.value()
        beta = ui.beta.value()
        sigma = ui.sigma.value()
        lload = ui.lload.value() / 10000
        sload = ui.sload.value() / 10000
        _w = alfa * dload + beta * lload + sigma * sload
        W = (_w * Lo)
        bcol = 0
        h_angel = ui.h_angel.value()
        beam = {'name': 'beam', 'Z': Z, 'd': d, 'bf': bf, 'tf': tf, 'tw': tw, 'L': Ln, 'W': W}

        from connection.WFP import WFP
        beamconnec = WFP(beam, Fy, Fu, Ry, tplate, bcol, phikh, B, Fue, FueG, gap, h_angel)

        var1 = beamconnec.Report
        var = var1[0]
        sumtext = f'''
gap = {var['gap']} cm
h_angel = {var['h_angel']} deg
delta_x = {var['delta_x']} cm

*** PL.A ***

Ratio = {var['Aptop_ratio']}

L = {var['Lptop']} cm
b =  {var['btop']} cm
b' = {var['btopb']} cm
t = {var['ttop']} cm
x = {var['x']} cm
y = {var['y']} cm
aw = {var['awtop']} cm

*** PL.B ***

Ratio = {var['Apbot_ratio']}

L = {var['Lpbot']} cm
b =  {var['bbot']} cm
t = {var['tbot']} cm
aw = {var['awbot']} cm

*** PL.C ***

Ratio = {var['ratio_vplate']}
Ratio_aw = {var['aw/awmax_vplate_ratio']}

n = {var['n_vplate']} 
h = {var['h_vplate']} cm
b = {var['b_vplate']} cm
t = {var['t_vplate']} cm
aw = {var['aw_vplate']} cm

*** joint plate ***

t = {var['t_joint_plate']} cm

'''

        filesummary = open('summary.txt', '+w')
        filesummary.write(sumtext)
        filesummary.close()

        filesolution = open('solution.txt', '+w')

        filesolution.write('********************\n********************\n')
        var2 = beamconnec.Solution
        for i in var2:
            filesolution.write(i)
        filesolution.close()
        WFP.Solution = []
        WFP.Report = []


    def wfp_auto():
        from connection.WFP import WFP
        from connection.MomentBeamEtabs import MomentBeam
        listofmomentbeam = MomentBeam()
        listofmomentbeam = sorted(listofmomentbeam, key=lambda x: (x['name'], x['story']))
        ignorlist = []
        designlist = []

        try:
            tplate = ui.t_plate.text()
            tplate = list(map(lambda x: float(x), tplate.split(',')))
            tplate = list(set(tplate))
        except:
            pass

        alfa = ui.alfa.value()
        beta = ui.beta.value()
        sigma = ui.sigma.value()
        Fue = ui.fue.value()
        FueG = ui.fueg.value()
        B = ui.betaw.value()
        phikh = ui.phikh.value()
        gap = ui.gap.value()
        bcol = 0

        for i in listofmomentbeam:
            name = i['name']
            Fy = i['Fy']
            Fu = i['Fu']
            Ry = i['Ry']
            Z = i['Z33']
            d = i['t3']
            bf = max(i['t2'], i['t2b'])
            tf = min(i['tf'], i['tfb'])
            tw = i['tw']
            h_angel = i['h_angel']

            # جدا کردن تیر هایی که مشخصات آنها موجود نیست و سعی بر طراحی از روی اسم آنها
            if bf == 0 or tf == 0 or d == 0 or tw == 0:
                try:
                    name.lower
                    name2 = name.split('w')
                    name3 = name2[-1].split('f')
                    dtw = name3[0].split('x')
                    d = float(dtw[0])
                    i['t3'] = d
                    tw = float(dtw[1])
                    i['tw'] = tw
                    bftf = name3[1].split('x')
                    bf = float(bftf[0])
                    i['t2'] = i['t2b'] = bf
                    tf = float(bftf[1])
                    i['tf'] = i['tfb'] = tf
                except:
                    ignorlist.append(i)
                    continue

            Ln = i['Ln']
            dload = i['d_sum']
            lload = i['l_sum']
            sload = i['s_sum']
            W = alfa * dload + beta * lload + sigma * sload
            beam = {'name': name, 'Z': Z, 'd': d, 'bf': bf, 'tf': tf, 'tw': tw, 'L': Ln, 'W': W}
            beamconnec = WFP(beam, Fy, Fu, Ry, tplate, bcol, phikh, B, Fue, FueG, gap, h_angel)
            designlist.append(i)

        report = beamconnec.Report
        solution = beamconnec.Solution

        connectiondatalist = [
            ['ID', 'Story', 'Name', 'h_angel(deg)', 'delta_x(cm)', 't_joint(cm)', 'PL.A(cm)', 'x - y(cm)', 'PL.B(cm)',
             'PL.C(cm)'],
            ['ID', 'Story', 'Name', 'angel', 'delta_x', 'PL t', "PL L x b' x b x t x aw", 'x - y', 'PL L x b x t x aw',
             'nPL x h x b x t x aw']
            ]
        for i in range(len(report)):
            idname = designlist[i]['ID']
            xyname = f"{report[i]['x']} - {report[i]['y']}"
            plafstr = f"PL {report[i]['Lptop']} x {report[i]['btopb']} x {report[i]['btop']} x {report[i]['ttop']} x {report[i]['awtop']}"
            plbfstr = f"PL {report[i]['Lpbot']} x {report[i]['bbot']} x {report[i]['tbot']} x {report[i]['awbot']}"
            plcfstr = f"{report[i]['n_vplate']}PL {report[i]['h_vplate']} x {report[i]['b_vplate']} x {report[i]['t_vplate']} x {report[i]['aw_vplate']}"
            tjointfstr = f"PL {report[i]['t_joint_plate']}"
            templist = [idname, designlist[i]['story'], report[i]['name'], report[i]['h_angel'], report[i]['delta_x'],
                        tjointfstr, plafstr, xyname, plbfstr, plcfstr]
            connectiondatalist.append(templist)

        summaryfile = open('summary.txt', '+w')
        solutionfile = open('solution.txt', '+w')
        for i in range(len(report)):
            sumtext = f'''
******************
******************
******************

{designlist[i]}

name = {report[i]['name']}
gap = {report[i]['gap']} cm
h_angel = {report[i]['h_angel']} deg
delta_x = {report[i]['delta_x']} cm

*** PL.A ***

Ratio = {report[i]['Aptop_ratio']}

L = {report[i]['Lptop']} cm
b =  {report[i]['btop']} cm
b' = {report[i]['btopb']} cm
t = {report[i]['ttop']} cm
x = {report[i]['x']} cm
y = {report[i]['y']} cm
aw = {report[i]['awtop']} 

*** PL.B ***

Ratio = {report[i]['Apbot_ratio']}

L = {report[i]['Lpbot']} cm
b =  {report[i]['bbot']} cm
t = {report[i]['tbot']} cm
aw = {report[i]['awbot']} 

*** PL.C ***

Ratio = {report[i]['ratio_vplate']}
Ratio_aw = {report[i]['aw/awmax_vplate_ratio']}

n = {report[i]['n_vplate']}
h = {report[i]['h_vplate']} cm
b = {report[i]['b_vplate']} cm
t = {report[i]['t_vplate']} cm
aw = {report[i]['aw_vplate']} 

*** joint plate ***

t = {report[i]['t_joint_plate']}


'''

            summaryfile.write(sumtext)
        for s in ignorlist:
            summaryfile.writelines(f'undesign beams = {s}\n')

        for i in solution:
            indexvar = solution.index(i)
            solutionfile.write('*******************************************************************\n')
            solutionfile.write(f'{designlist[indexvar]}\n')
            solutionfile.write('*******************************************************************\n')
            solutionfile.write(i)
        solutionfile.close()
        summaryfile.close()
        wfp_docx_export(connectiondatalist)
        WFP.Solution = []
        WFP.Report = []


    def wfp_docx_export(connectiondatalist):
        from connection.docexport import connection_export as expo
        expo(connectiondatalist, 'لیست اتصالات گیردار:( WFP )', 'connection')


    sys.exit(app.exec_())